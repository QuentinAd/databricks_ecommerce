name: CD Workflow

on:
  push:
    branches:
      - main

jobs:
  cd-deploy-test:
    name: Deploy to TEST
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Databricks CLI
        run: curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Set up uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Configure Databricks
        run: |
          # write out the profile (here called "TEST")
          cat <<EOF > ~/.databrickscfg
          [TEST]
          host = ${{ vars.DATABRICKS_HOST_TESTING_URL }}
          EOF

      - name: Deploy to TEST
        run: |
          databricks bundle deploy \
            --target test \
            --profile TEST

  cd-deploy-prod:
    name: Deploy to PROD
    needs: cd-deploy-test
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Databricks CLI
        run: curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Set up uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Configure Databricks
        run: |
          # write out the profile (here called "PROD")
          cat <<EOF > ~/.databrickscfg
          [PROD]
          host = ${{ vars.DATABRICKS_HOST_PROD_URL }}
          EOF

      - name: Deploy to PROD
        run: |
          databricks bundle deploy \
            --target prod \
            --profile PROD
